let $camlSize__first_const14 = Block 0 () in
let code rec size(9)
      num_0 (x : imm tagged)
        my_closure my_region my_depth
        -> k * k1
        : imm tagged =
  let next_depth = rec_info (succ my_depth) in
  (let Psubint = x - 1 in
   apply direct(num_0) (my_closure : _ -> imm tagged) (Psubint) &my_region -> k2 * k1)
    where k2 (apply_result) =
      let Paddint = 1 + apply_result in
      cont k (Paddint)
in
(let num = closure num_0 @num in
 let Pmakeblock = %Block 0 (num) in
 cont k (Pmakeblock))
  where k define_root_symbol (module_block) =
    let field_0 = %block_load tag(0) size(1) (module_block, 0) in
    let $camlSize = Block 0 (field_0) in
    cont done ($camlSize)
