let $camlSimple__first_const29 = Block 0 () in
let code size(3)
      foo_0 (n, m : imm tagged)
        my_closure my_region my_depth
        -> k * k1
        : imm tagged =
  let Poffsetint = m + 1 in
  cont k (Poffsetint)
in
let code size(6)
      partial_foo_2 (param1) my_closure my_region my_depth -> k * k1 =
  let n = %project_value_slot partial_foo.n my_closure in
  let foo = %project_value_slot partial_foo.foo my_closure in
  apply direct(foo_0) (foo : _ -> imm tagged) (n, param1) -> k * k1
in
let code size(17) bar_1 (n) my_closure my_region my_depth -> k * k1 =
  let foo = %project_value_slot bar.foo_1 my_closure in
  let partial_foo = closure partial_foo_2 @partial_foo
  with { foo = foo; n = n }
  in
  cont k (partial_foo)
in
(let foo = closure foo_0 @foo in
 let bar = closure bar_1 @bar with { foo_1 = foo } in
 let Pmakeblock = %Block 0 (foo, bar) in
 cont k (Pmakeblock))
  where k define_root_symbol (module_block) =
    let field_0 = %block_load tag(0) size(2) (module_block, 0) in
    let field_1 = %block_load tag(0) size(2) (module_block, 1) in
    let $camlTwolets = Block 0 (field_0, field_1) in
    cont done ($camlTwolets)
