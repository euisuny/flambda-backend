let $camlExit__first_const15 = Block 0 () in
let code loopify(never) size(1)
      foo_0 (param) my_closure my_region my_depth -> k * k1 =
  cont k (0)
in
(let foo = closure foo_0 @foo in
 (let Pfield = %block_load ($CamlinternalAtomic.camlCamlinternalAtomic, 0) in
  apply Pfield (foo) &toplevel -> k1 * error)
   where k1 (exit_function) =
     let Pmakeblock = %Block 0 (foo, exit_function) in
     cont k (Pmakeblock))
  where k define_root_symbol (module_block) =
    let field_0 = %block_load tag(0) size(2) (module_block, 0) in
    let field_1 = %block_load tag(0) size(2) (module_block, 1) in
    let $camlExit = Block 0 (field_0, field_1) in
    cont done ($camlExit)
