let $camlRec__first_const17 = Block 0 () in
let code rec loopify(default tailrec) size(4)
      g_1 (param) my_closure my_region my_depth -> k * k1 =
  let next_depth = rec_info (succ my_depth) in
  apply direct(g_1) my_closure (0) &my_region -> k * k1
in
let code size(15) foo_0 (param) my_closure my_region my_depth -> k * k1 =
  let g = closure g_1 @g in
  apply direct(g_1) g (0) &my_region -> k * k1
in
(let foo = closure foo_0 @foo in
 let Pmakeblock = %Block 0 (foo) in
 cont k (Pmakeblock))
  where k define_root_symbol (module_block) =
    let field_0 = %block_load tag(0) size(1) (module_block, 0) in
    let $camlRec = Block 0 (field_0) in
    cont done ($camlRec)
